import os
import pickle
from googleapiclient.discovery import build
from google.auth.transport.requests import Request
from google.oauth2.credentials import Credentials

# If modifying these scopes, delete the file token.pickle.
SCOPES = ['https://www.googleapis.com/auth/spreadsheets']

def authorize_credentials():
    creds = None
    # The file token.pickle stores the user's access and refresh tokens, and is
    # created automatically when the authorization flow completes for the first time.
    if os.path.exists('token.pickle'):
        with open('token.pickle', 'rb') as token:
            creds = pickle.load(token)
    # If there are no (valid) credentials available, let the user log in.
    if not creds or not creds.valid:
        if creds and creds.expired and creds.refresh_token:
            creds.refresh(Request())
        else:
            flow = InstalledAppFlow.from_client_secrets_file(
                'credentials.json', SCOPES)
            creds = flow.run_local_server(port=0)
        # Save the credentials for the next run
        with open('token.pickle', 'wb') as token:
            pickle.dump(creds, token)
    return creds

def grant_editor_permission(sheet_id, email):
    creds = authorize_credentials()
    service = build('sheets', 'v4', credentials=creds)
    
    # Define the request body to add the user as an editor
    body = {
        'requests': [
            {
                'addEditor': {
                    'emailAddress': email
                }
            }
        ]
    }

    # Call the Sheets API to execute the request
    response = service.spreadsheets().batchUpdate(spreadsheetId=sheet_id, body=body).execute()
    print('Permission granted to {} for spreadsheet ID: {}'.format(email, sheet_id))

if __name__ == '__main__':
    # Specify the Google Sheets document ID and the email of the user to grant permissions
    sheet_id = '1xPhjx3ZK88GMyKpAOwRMo3fPEYqosb7Y6u4f0inhLrY'
    user_email = 'bengrambs@gmail.com'

    grant_editor_permission(sheet_id, user_email)
